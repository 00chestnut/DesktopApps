<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EeOZKZo4cQPrykqOXPlkcCN3p8cnfaGo9e+EEDvwTKfbazxk+/sk0mNgrLi7z2/mr7L9nRBybOCd7j7f
        m5k49QbGXD09voCZAic6soMQkiDwkHnriHrK5jUltQbGo1M4m4ZpRWwNIoRMD3jJvH3EbuLUGRjmxZlm
        vAiq39IQQsj0gZdwQgvegscme05JxsA71MC6EgXPJmKWeqwAKySEpBZ4C2eo4bVx38GDcTtOX7rQEiwY
        t3ThrBmm+Ji8QkJIaoF58SYIPMgQ/11yBoZ5feH+yQskhKQReA1vgoD39P+JG1i79BJM1BVfECEkQ8Bz
        8ZkuEzewyx9apAv4hS4QQ2lCSAaB99yB8KK4HSmKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoqiC0HHH/T83
        zLATYO7FsQAAAABJRU5ErkJggg==
</value>
  </data>
</root>